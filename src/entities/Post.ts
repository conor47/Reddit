// This file was generated by running the command typeorm init --database postgres

// In typeORM entities are like models 

import { IsEmail, Length } from "class-validator";
import {Entity as TOEntity, Column, Index, BeforeInsert, ManyToOne, JoinColumn} from "typeorm";
import bcrypt from 'bcrypt'
import { Exclude} from 'class-transformer'

// we import our abstract entity which we will extend
import Entity from "./Entity"
import User from "./User";

@TOEntity('posts')
export default class Post extends Entity {

    // in a partial , some of the fields are allowed to be nullable
    constructor(user: Partial<Post>){
        super()
        Object.assign(this,user)
    }

    // 7 character id for posts
    @Index()
    @Column()
    identifier : string


    @Column()
    title : string

    @Index()
    @Column()
    slug : string

    @Column({nullable :true, type : 'text'})
    body : string

    @Column()
    subName: string

    // here we are defining a many to one relationship between posts and users
    @ManyToOne(() => User, (user) => user.posts)
    @JoinColumn({name:"username", referencedColumnName:"username"})
    user: User;


}
